<Project Sdk="Microsoft.NET.Sdk.Web">

  <PropertyGroup>
    <OutputType>WinExe</OutputType>
    <TargetFrameworks>net6.0-windows;net8.0-windows</TargetFrameworks>
    <UseWindowsForms>true</UseWindowsForms>
    <ApplicationIcon>Assets\bravo.ico</ApplicationIcon>
    <Company>SQLBI Corporation</Company>
    <Product>Bravo for Power BI</Product>
    <Copyright>© SQLBI Corporation</Copyright>
    <AssemblyTitle>Bravo for Power BI</AssemblyTitle>
    <RootNamespace>Sqlbi.Bravo</RootNamespace>
    <Nullable>enable</Nullable>
    <GenerateDocumentationFile Condition=" '$(Configuration)' != 'Release' ">true</GenerateDocumentationFile>
    <NoWarn>$(NoWarn);1591</NoWarn>
    <TypeScriptCompileBlocked>true</TypeScriptCompileBlocked>
    <Configurations>$(Configurations);Debug_wwwroot</Configurations>
    <!--AnalysisMode>all</AnalysisMode-->
    <AnalysisLevel>latest</AnalysisLevel>
    <IncludeOpenAPIAnalyzers>true</IncludeOpenAPIAnalyzers>
    <SatelliteResourceLanguages>en-US</SatelliteResourceLanguages>
    <ApplicationHighDpiMode>PerMonitorV2</ApplicationHighDpiMode>
    <IncludeSourceRevisionInInformationalVersion>false</IncludeSourceRevisionInInformationalVersion>
    <NeutralLanguage>en-US</NeutralLanguage>
    <DefineConstants>$(DefineConstants);$(AdditionalConstants)</DefineConstants>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="CsvHelper" Version="33.0.1" />
    <PackageReference Include="Dax.Model.Extractor" Version="1.9.0" />
    <PackageReference Include="Dax.Template" Version="0.2.1" />
    <PackageReference Include="Dax.Formatter" Version="1.2.0" />
    <PackageReference Include="Dax.ViewModel" Version="1.9.0" />
    <PackageReference Include="Dax.Vpax" Version="1.9.0" />
    <PackageReference Include="Dax.Vpax.Obfuscator" Version="1.1.3" />
    <PackageReference Include="Hellang.Middleware.ProblemDetails" Version="6.5.1" />
    <PackageReference Include="LargeXlsx" Version="1.10.0" />
    <PackageReference Include="Macross.Json.Extensions" Version="3.0.0" />
    <PackageReference Include="Microsoft.Extensions.Logging.ApplicationInsights" Version="2.22.0" />
    <PackageReference Include="Microsoft.Web.WebView2" Version="1.0.2739.15" />
    <PackageReference Include="Microsoft.Identity.Client.Desktop" Version="4.66.2" />
    <PackageReference Include="Swashbuckle.AspNetCore" Version="7.1.0" PrivateAssets="all" />
    <PackageReference Include="System.CommandLine" Version="2.0.0-beta4.22272.1" />
    <PackageReference Include="System.Management" Version="9.0.1" />
  </ItemGroup>

  <ItemGroup>
    <AssemblyAttribute Include="System.Runtime.CompilerServices.InternalsVisibleTo">
      <_Parameter1>$(AssemblyName).Tests</_Parameter1>
    </AssemblyAttribute>
    <Reference Include="Antlr4.Runtime">
      <HintPath>Assets\lib\Antlr4.Runtime.dll</HintPath>
    </Reference>
    <Reference Include="TOMWrapper">
      <HintPath>Assets\lib\TOMWrapper.dll</HintPath>
    </Reference>
    <None Include="wwwroot\**">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </None>
    <Content Remove="Scripts\**;Assets\**" />
    <EmbeddedResource Include="Assets\ManageDates\Templates\*.json;Assets\ManageDates\Schemas\*.schema.json" />
    <Compile Update="Properties\Resources.Designer.cs">
      <DesignTime>True</DesignTime>
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <EmbeddedResource Update="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
  </ItemGroup>

  <!--
  Remove unnecessary WPF assemblies from the output (net8 target only)
  See GH issue https://github.com/dotnet/winforms/issues/2426 and https://github.com/dotnet/sdk/issues/4078
  -->
  <Target Name="RemoveWpfAssemblies" AfterTargets="Build;Publish" Condition=" '$(TargetFramework)' == 'net8.0-windows' ">
    <PropertyGroup>
      <_OutputPath Condition=" '$(OutputPath)' != '' ">$(OutputPath)</_OutputPath>
      <_OutputPath Condition=" '$(PublishDir)' != '' ">$(PublishDir)</_OutputPath>
    </PropertyGroup>
    <ItemGroup>
      <FilesToDelete Include="$(_OutputPath)PresentationCore.dll" />
      <FilesToDelete Include="$(_OutputPath)PresentationFramework.Aero.dll" />
      <FilesToDelete Include="$(_OutputPath)PresentationFramework.Aero2.dll" />
      <FilesToDelete Include="$(_OutputPath)PresentationFramework.AeroLite.dll" />
      <FilesToDelete Include="$(_OutputPath)PresentationFramework.Classic.dll" />
      <FilesToDelete Include="$(_OutputPath)PresentationFramework.dll" />
      <FilesToDelete Include="$(_OutputPath)PresentationFramework.Luna.dll" />
      <FilesToDelete Include="$(_OutputPath)PresentationFramework.Royale.dll" />
      <FilesToDelete Include="$(_OutputPath)PresentationFramework-SystemCore.dll" />
      <FilesToDelete Include="$(_OutputPath)PresentationFramework-SystemData.dll" />
      <FilesToDelete Include="$(_OutputPath)PresentationFramework-SystemDrawing.dll" />
      <FilesToDelete Include="$(_OutputPath)PresentationFramework-SystemXml.dll" />
      <FilesToDelete Include="$(_OutputPath)PresentationFramework-SystemXmlLinq.dll" />
      <FilesToDelete Include="$(_OutputPath)PresentationNative_cor3.dll" />
      <FilesToDelete Include="$(_OutputPath)PresentationUI.dll" />
      <FilesToDelete Include="$(_OutputPath)ReachFramework.dll" />
      <FilesToDelete Include="$(_OutputPath)UIAutomationClient.dll" />
      <FilesToDelete Include="$(_OutputPath)UIAutomationClientSideProviders.dll" />
      <FilesToDelete Include="$(_OutputPath)UIAutomationProvider.dll" />
      <FilesToDelete Include="$(_OutputPath)UIAutomationTypes.dll" />
      <FilesToDelete Include="$(_OutputPath)WindowsBase.dll" />
      <FilesToDelete Include="$(_OutputPath)WindowsFormsIntegration.dll" />
      <FilesToDelete Include="$(_OutputPath)wpfgfx_cor3.dll" />
    </ItemGroup>
    <Message Importance="high" Text="::RemoveWpfAssemblies - @(FilesToDelete)" />
    <Delete Files="@(FilesToDelete)" />
  </Target>

  <!-- 
  ** The following custom MSBuild targets add the static client web assets into the build process
  ** - ClientAssetsRestore => restore client web assets from npm
  ** - ClientAssetsBuild   => run npm build and collect the outputs as static web assets (wwwroot)
  ** - DefineClientAssets  => capture all the files in the output content and link them to the wwwroot folder - this target run only when the sources are changed
  **
  ** https://devblogs.microsoft.com/dotnet/build-client-web-assets-for-your-razor-class-library/ 
  ** https://github.com/aspnet/AspLabs/blob/main/src/ClientAssets/Microsoft.AspNetCore.ClientAssets/build/netstandard2.0/Microsoft.AspNetCore.ClientAssets.targets
  ** https://docs.microsoft.com/en-us/archive/msdn-magazine/2009/february/msbuild-best-practices-for-creating-reliable-builds-part-1
  -->

  <PropertyGroup>
    <ClientAssetsEnabled Condition="'$(Configuration)' != 'Debug_wwwroot'">true</ClientAssetsEnabled>
    <ClientAssetsDirectory Condition="'$(ClientAssetsDirectory)' == ''">Scripts\</ClientAssetsDirectory>
    <ClientAssetsRestoreInputs Condition="'$(ClientAssetsRestoreInputs)' == ''">$(ClientAssetsDirectory)package-lock.json;$(ClientAssetsDirectory)package.json</ClientAssetsRestoreInputs>
    <ClientAssetsRestoreOutputs Condition="'$(ClientAssetsRestoreOutputs)' == ''">$(ClientAssetsDirectory)node_modules\.package-lock.json</ClientAssetsRestoreOutputs>
  </PropertyGroup>

  <ItemGroup>
    <ClientAssetsInputs Include="$(ClientAssetsDirectory)**" Exclude="$(DefaultItemExcludes)" />
  </ItemGroup>

  <Target Name="ClientAssetsRestore" Condition="'$(ClientAssetsEnabled)' == 'true'" BeforeTargets="Build" Inputs="$(ClientAssetsRestoreInputs)" Outputs="$(ClientAssetsRestoreOutputs)">
    <Message Importance="high" Text="::ClientAssetsRestore - running 'npm install' ..." />
    <Exec Command="npm install" WorkingDirectory="$(ClientAssetsDirectory)" />
  </Target>

  <Target Name="ClientAssetsBuild" Condition="'$(ClientAssetsEnabled)' == 'true'" DependsOnTargets="ClientAssetsRestore" BeforeTargets="AssignTargetPaths" Inputs="@(ClientAssetsInputs)" Outputs="$(IntermediateOutputPath)clientassetsbuild.complete.txt">
    <PropertyGroup>
      <_ClientAssetsOutputFullPath>$([System.IO.Path]::GetFullPath('$(IntermediateOutputPath)clientassets'))\</_ClientAssetsOutputFullPath>
    </PropertyGroup>
    <MakeDir Directories="$(_ClientAssetsOutputFullPath)" />
    <Message Importance="high" Text="::ClientAssetsBuild - running 'npm run build:$(Configuration)' ..." />
    <Exec Command="npm run build:$(Configuration) -- --output-path $(_ClientAssetsOutputFullPath)" WorkingDirectory="$(ClientAssetsDirectory)" />
    <ItemGroup>
      <_ClientAssetsBuildOutput Include="$(IntermediateOutputPath)clientassets\**"></_ClientAssetsBuildOutput>
    </ItemGroup>
    <WriteLinesToFile File="$(IntermediateOutputPath)clientassetsbuild.complete.txt" Lines="@(_ClientAssetsBuildOutput)" />
  </Target>

  <Target Name="DefineClientAssets" Condition="'$(ClientAssetsEnabled)' == 'true'" AfterTargets="ClientAssetsBuild">
    <ItemGroup>
      <FileWrites Include="@(_ClientAssetsBuildOutput)" />
      <FileWrites Include="$(IntermediateOutputPath)clientassetsbuild.complete.txt" />
      <Message Importance="high" Text="::DefineClientAssets - link 'wwwroot\%(_ClientAssetsBuildOutput.RecursiveDir)\%(_ClientAssetsBuildOutput.FileName)%(_ClientAssetsBuildOutput.Extension)' ..." />
      <Content Include="@(_ClientAssetsBuildOutput)" Link="wwwroot\%(_ClientAssetsBuildOutput.RecursiveDir)\%(_ClientAssetsBuildOutput.FileName)%(_ClientAssetsBuildOutput.Extension)">
        <CopyToOutputDirectory>Always</CopyToOutputDirectory>
      </Content>
    </ItemGroup>
  </Target>

</Project>
